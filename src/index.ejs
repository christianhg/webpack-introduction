<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>
    <%= htmlWebpackPlugin.options.title %>
  </title>
</head>

<body>
  <div class="reveal">
    <div class="slides">
      <section>
        <img src="<%= require('./images/webpack-logo-logotype.svg') %>">

        <em>Bundling <strong>JavaScript modules</strong> with <strong>webpack</strong></em>
      </section>
      <section>
        <ol>
          <li>webpack overview</li>
          <li class="fragment">JavaScript modules</li>
          <li class="fragment">Putting it all together</li>
        </ol>
      </section>

      <!-- Part 1: webpack overview -->

      <section data-markdown>
        <script type="text/template">
          > [webpack is a] bundler for javascript and friends. [It packs] many modules into a few bundled assets. Code Splitting allows to load parts for the application on demand. Through "loaders," modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.

          > -- [https://github.com/webpack/webpack](https://github.com/webpack/webpack)
        </script>
      </section>
      <section data-markdown>
        <script type="text/template">
          > webpack is a module bundler for modern JavaScript applications.

          > -- [https://webpack.js.org/concepts/](https://webpack.js.org/concepts/)
        </script>
      </section>
      <section>
        <ul>
          <li><a href="https://webpack.js.org/configuration/">Extremely configurable</a></li>
          <li class="fragment">webpack.config.js</li>
          <li class="fragment">NPM modules</li>
          <li class="fragment">Everything is a depency</li>
          <li class="fragment">Recursively builds a dependency graph</li>
          <li class="fragment">Packages everything in few bundles</li>
        </ul>
      </section>
      <section data-markdown>
        <script type="text/template">
          What is a **modern JavaScript application**?
        </script>
      </section>
      <section>
        <img src="<%= require('./images/cue.svg') %>">
      </section>
      <section>
        <img src="<%= require('./images/slideception.png') %>">
      </section>
      <section>
        <ul>
          <li>ES6 modules</li>
          <li class="fragment">reveal.js</li>
          <li class="fragment">highlight.js</li>
          <li class="fragment">marked</li>
          <li class="fragment">Sass</li>
          <li class="fragment">EJS</li>
          <li class="fragment">SVGs</li>
          <li class="fragment">Fonts</li>
          <li class="fragment"><em>Bundled with webpack</em></li>
        </ul>
      </section>
      <section>
        <pre>
          <code data-trim>
            .
            |-- css
            |   `-- main.scss
            |-- fonts
            |   |-- FiraCode-Regular.eot
            |   |-- FiraCode-Regular.otf
            |   |-- FiraCode-Regular.ttf
            |   |-- FiraCode-Regular.woff
            |   `-- FiraCode-Regular.woff2
            |-- images
            |   |-- cue.svg
            |   |-- es6-modules-compatibility.png
            |   |-- slideception.png
            |   |-- webpack-bundling.png
            |   |-- webpack-logo-logotype.svg
            |   `-- webpack-logo.svg
            |-- index.ejs
            `-- js
                |-- highlight.js
                |-- main.js
                `-- markdown.js
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            .
            |-- 09a5400b287f92cf38db77712d11210d.png
            |-- 18ea36a9c87b4d597b5f86821ba000b8.png
            |-- 3a39f8caae69895d3b2accd84ba8f774.svg
            |-- 4d1f86fcb0a65b77d60d96e96feec828.woff
            |-- 91295fa87df918411b49b7531da5d558.ttf
            |-- 96621d3c37d96ad3bf792fcc848d912f.svg
            |-- 9900a4643cc63c5d8f969d2196f72572.eot
            |-- a25c2aac64ccad1e1954d38c2c6d84bc.svg
            |-- b230d1101a895d8950b4df14fa57119e.png
            |-- cd382dc8a9d6317864b5810a320effc5.woff
            |-- e40dc3166f510d9a598fefb3750d8a78.woff2
            |-- f79d9792d54ba709714100860066aae9.eot
            |-- fa1f8c8961adca519738d9518139579c.ttf
            |-- index.html
            |-- webpack-introduction.css
            |-- webpack-introduction.css.map
            |-- webpack-introduction.js
            `-- webpack-introduction.js.map
          </code>
        </pre>
      </section>
      <section>
        <img src="<%= require('./images/webpack-bundling.png') %>">
      </section>
      <section>
        <img src="<%= require('./images/gulp.png') %>">
      </section>
      <section>
        <pre>
          <code data-trim>
            // index.ejs

            <section>
              &lt;img src="&lt;%= require('./webpack-logo-logotype.svg') %&gt;"&gt;
            </section>
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            // main.scss

            @font-face {
              font-family: 'FiraCode';
              src: url('../fonts/FiraCode-Regular.eot');
              src: url('../fonts/FiraCode-Regular.eot?#iefix') format('embedded-opentype'),
                  url('../fonts/FiraCode-Regular.woff2') format('woff2'),
                  url('../fonts/FiraCode-Regular.woff') format('woff'),
                  url('../fonts/FiraCode-Regular.ttf') format('truetype');
            }
          </code>
        </pre>
      </section>
       <section>
        <pre>
          <code data-trim>
            // main.js

            import Reveal from 'reveal.js'
            import markdown from './markdown'
          </code>
        </pre>
      </section>
      <section data-markdown>
        <script type="text/template">
          Main reason: *JavaScript modules!*
        </script>
      </section>

      <!-- Part 2: JavaScript modules -->

      <section data-markdown>
        <script type="text/template">
          Why modules?
        </script>
      </section>
      <section>
        <ul>
          <li>Namespacing</li>
          <li class="fragment">Reuse</li>
          <li class="fragment">Decoupling</li>
        </ul>
      </section>

      <section data-markdown>
        <script type="text/template">
          Quick tour: *How to module in JavaScript*
        </script>
      </section>
      <section>
        <pre>
          <code data-trim>
            // Pre-ES6 scopes:

            var public = 'not so secret'

            function newScope() {
              var private = 'secret'
            }

            public
            // => "not so secret"

            private
            // => Uncaught ReferenceError: private is not defined
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // Vanilla pre-ES6 module

            var MouseCounterModule = function(jQuery) {
              var numClicks = 0
              var handleClick = function() {
                alert(++numClicks)
              }

              return {
                countClicks: function() {
                  jQuery(document).on('click', handleClick)
                }
              }
            }

            MouseCounterModule($).countClicks()
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // AMD module

            define('MouseCounterModule', ['jQuery'], function($) {
              var numClicks = 0
              var handleClick = function() {
                alert(++numClicks)
              }

              return {
                countClicks: function() {
                  $(document).on('click', handleClick)
                }
              }
            }

            require(['MouseCounterModule'], function(mouseCounterModule) {
              mouseCounterModule.countClicks()
            })
          </code>
        </pre>
      </section>
      <section>
        <p>ES6 modules:</p>
        <ul>
          <li class="fragment">File based</li>
          <li class="fragment">Singletons</li>
          <li class="fragment">Own scope</li>
          <li class="fragment">Used by TypeScript</li>
          <li class="fragment">Not ready yet</li>
        </ul>
      </section>
      <section>
        <img src="<%= require('./images/es6-modules-compatibility.png') %>">
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // ES6 module

            // mouseCounter.js
            import $ from 'jQuery'

            var numClicks = 0
            var handleClick = function() {
              alert(++numClicks)
            }

            export var mouseCounter = {
              countClicks: function() {
                $(document).on('click', handleClick)
              }
            }

            // anotherFile.js
            import { mouseCounter } from 'mouseCounter.js'

            mouseCounter.countClicks()
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // CommonJS module

            // mouseCounter.js
            var $ = require('jQuery')

            var numClicks = 0
            var handleClick = function() {
              alert(++numClicks)
            }

            module.exports = {
              countClicks: function() {
                $(document).on('click', handleClick)
              }
            }

            // anotherFile.js
            var mouseCounter = require('mouseCounter.js')

            mouseCounter.countClicks()
          </code>
        </pre>
      </section>

      <!-- Part 3: Putting it all together -->

      <section data-markdown>
        <script type="text/template">
          *Back to webpack!*
        </script>
      </section>
      <section>
        <pre>
          <code data-trim>
            // bar.js
            export function bar() {
              //
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            <fade>// bar.js
            export function bar() {
              //
            }</fade>

            // app.js
            import { bar } from './bar';

            bar();
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            <fade>// bar.js
            export function bar() {
              //
            }

            // app.js
            import { bar } from './bar';

            bar();</fade>

            // webpack.config.js
            module.exports = {
              entry: './app.js',
              output: {
                filename: 'bundle.js'
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            <fade>// bar.js
            export function bar() {
              //
            }

            // app.js
            import { bar } from './bar';

            bar();

            // webpack.config.js
            module.exports = {
              entry: './app.js',
              output: {
                filename: 'bundle.js'
              }
            }</fade>

            // index.html
            &lt;script src="bundle.js"&gt;&lt;/script&gt;
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            // webpack.config.js

            module.exports = {}
          </code>
        </pre>
      </section>
      <section>
        <ul>
          Four Core Concepts:
          <li class="fragment">Entry</li>
          <li class="fragment">Output</li>
          <li class="fragment">Loaders</li>
          <li class="fragment">Plugins</li>
        </ul>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            module.exports = {
              <mark>entry: './src/main.js'</mark>
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // webpack.config.js

            <mark>const path = require('path')</mark>

            module.exports = {
              entry: './src/main.js',
              <mark>output: {
                path: path.resolve(__dirname, 'dist'),
                filename: 'webpack-configuration.js'
              }</mark>
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            const path = require('path')

            module.exports = {
              entry: './src/main.js',
              output: {
                path: path.resolve(__dirname, 'dist'),
                filename: 'webpack-configuration.js'
              }<mark>,
              module: {
                rules: [{
                  test: /\.(css|scss)$/,
                  use: [
                    {
                      loader: 'css-loader'
                    },
                    {
                      loader: 'sass-loader'
                    }
                  ]
                }]
              }</mark>
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            const path = require('path')
            <mark>const HtmlWebpackPlugin = require('html-webpack-plugin')</mark>

            module.exports = {
              entry: './src/main.js',
              output: {
                path: path.resolve(__dirname, 'dist'),
                filename: 'webpack-configuration.js'
              },
              module: {
                rules: [{
                  ...
                }],
              }<mark>,
              new HtmlWebpackPlugin({
                title: 'webpack Introduction',
                template: 'src/index.ejs'
              })</mark>
            }
          </code>
        </pre>
      </section>
      <section data-markdown>
        <script type="text/template">
          CUE Storyline setup
        </script>
      </section>
      <section>
        <pre>
          <code data-trim>
            npm install --save-dev webpack
            npm install --save-dev webpack-dev-server
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            // package.json

            {
              "scripts": {
                "dev": "webpack-dev-server",
                "dist": "webpack"
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // package.json

            {
              "scripts": {
                "dev": "webpack-dev-server",
                "dist": "webpack<mark> -p</mark>"
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            npm run dev
            npm run dist
          </code>
        </pre>
      </section>

      <section>
        <pre>
          <code data-trim data-noescape>
            .
            |-- css
            |   `-- storylines.scss
            |-- fonts
            |   `-- storylines.woff
            |-- js
            |   |-- components
            |   |   |-- editor.component.ts
            |   |   |-- stateMonitorSidePanel.component.ts
            |   |   |-- storiesSidePanel.component.ts
            |   |   |-- storyElements
            |   |   |   |-- factBox.component.ts
            |   |   |   |-- gallery.component.ts
            |   |   |   |-- headline.component.ts
            |   |   |   |-- image.component.ts
            |   |   |   |-- paragraph.component.ts
            |   |   |   `-- pullQuote.component.ts
            |   |   `-- storyline.component.ts
            |   |-- core
            |   |   |-- maybe.ts
            |   |   |-- rte.directive.ts
            |   |   `-- safeApply.ts
            |   |-- services
            |   |   `-- storyline.service.ts
            |   |-- state
            |   |   |-- actions
            |   |   |   |-- paragraph.actions.ts
            |   |   |   |-- storyElements.actions.ts
            |   |   |   |-- storylineWithTemplate.actions.ts
            |   |   |   `-- storylines.actions.ts
            |   |   |-- reducers
            |   |   |   |-- storyElements.reducer.ts
            |   |   |   `-- storylines.reducer.ts
            |   |   |-- state.ts
            |   |   |-- store.ts
            |   |   `-- storeHelpers.ts
            |   `-- storylines.module.ts
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            .
            |-- 9d1d1c7c17fa917d019602aeef37c965.woff
            |-- storylines.css
            |-- storylines.css.map
            |-- storylines.js
            `-- storylines.js.map
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            // webpack.config.babel.js

            export default {}
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim data-noescape>
            // webpack.config.babel.js

            {
              entry: './src/js/storylines.module.ts',
              externals: {
                '_': 'lodash',
                'angular': 'angular'
              },
              output: {
                path: path.resolve(__dirname, 'dist'),
                filename: 'storylines.js'
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code data-trim>
            // webpack.config.babel.js

            {
              rules: [
                ...
                {
                  enforce: 'pre',
                  test: /\.ts$/,
                  use: ['tslint-loader']
                },
                {
                  test: /\.ts$/,
                  use: ['awesome-typescript-loader', 'source-map-loader']
                },
                {
                  enforce: 'post',
                  test: /\.ts$/,
                  use: ['babel-loader', 'source-map-loader']
                }
                ...
              ]
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code>
            npm install --save-dev tslint-loader
            npm install --save-dev source-map-loader
            npm install --save-dev awesome-typescript-loader
            npm install --save-dev babel-loader
          </code>
        </pre>
      </section>
      <section data-markdown>
        <script type="text/template">
          - TSLint config
          - TypeScript config
          - Babel config
        </script>
      </section>
      <section>
        <pre>
          <code>
            npm install --save-dev tslint

            // webpack.config.js

            {
              enforce: 'pre',
              test: /\.ts$/,
              use: ['tslint-loader']
            }

            // tslint.json

            {
              "rules": {
                ...
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code>
            npm install --save-dev typescript

            // webpack.config.js

            {
              test: /\.ts$/,
              use: ['awesome-typescript-loader', 'source-map-loader']
            },

            // tsconfig.json

            {
              "compilerOptions": {
                "allowUnreachableCode": false,
                "module": "commonjs",
                "skipLibCheck": true,
                "sourceMap": true,
                "strictNullChecks": true,
                "target": "es6"
              }
            }
          </code>
        </pre>
      </section>
      <section>
        <pre>
          <code>
            npm install --save-dev babel-core
            npm install --save-dev babel-plugin-angularjs-annotate
            npm install --save-dev babel-plugin-transform-object-rest-spread
            npm install --save-dev babel-plugin-transform-runtime babel-preset-es2015

            // webpack.config.js

            {
              enforce: 'post',
              test: /\.ts$/,
              use: ['babel-loader', 'source-map-loader']
            }

            // package.json

            {
              "babel": {
                "plugins": [
                  "angularjs-annotate",
                  "transform-object-rest-spread",
                  "transform-runtime"
                ],
                "presets": [
                  "es2015"
                ]
              }
            }
          </code>
        </pre>
      </section>
    </div>
    <footer type="contentinfo">
      <img src="<%= require('./images/webpack-logo.svg') %>">
    </footer>
  </div>
</body>

</html>